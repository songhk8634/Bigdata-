--------------------------------------------------------------------------
-- BEER SERVINGS 100 이상이 되는 나라의 WINE_SERVINGS
-- COUNTRY, WINE_SERVINGS
-- BEER_SERVINGS >100

SELECT COUNTRY, WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>100;

--------------------------------------------------------------------------
-- BEER_SERVINGS 100이상이 되고 WINE_SERVINGS가 50이하가 되는 나라의 모든 COLUMN
-- *
-- BEER_SERVINGS >=100 AND WINE_SERVINGS<=50

SELECT *
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>=100 AND WINE_SERVINGS<=50;

--------------------------------------------------------------------------
-- BEER_SERVINGS의 값보다 WINE_SERVINGS의 값이 2배 큰 나라의 SPIRIT_SERVINGS
-- COUNTRY, SPIRIT_SERVINGS
-- BEER_SERVINGS<WINE_SERVINGS

SELECT COUNTRY,SPIRIT_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE 2*BEER_SERVINGS<WINE_SERVINGS;

--------------------------------------------------------------------------
-- TITANIC 40세 이상 여자 생존자의 TICKET 번호, EMBARKED를 가져오라

SELECT TICKET, EMBARKED, AGE, SEX, PASSENGERS
FROM TITANIC
WHERE PASSENGERS = 'Survived' 
      AND AGE LIKE '%Over%' 
      AND SEX = 'female';

--------------------------------------------------------------------------
-- ALBANIA 라는 나라의 BEER_SERVINGS, WINE_SERVINGS 의 차이
 
SELECT COUNTRY, 
       BEER_SERVINGS,
       WINE_SERVINGS, 
       BEER_SERVINGS-WINE_SERVINGS,
       (SELECT AVG(BEER_SERVINGS)FROM ALCOHOL_CONSUMPTION)
FROM ALCOHOL_CONSUMPTION
WHERE LOWER(COUNTRY) LIKE '%albania%';

--------------------------------------------------------------------------
--ALBANIA,ALGERIA 나라의 BEER_SERVINGS,WINE_SERVINGS,의 차가 얼마나되는지

SELECT COUNTRY,
       BEER_SERVINGS,
       WINE_SERVINGS,
       BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE COUNTRY='albania' or COUNTRY='algeria';

SELECT COUNTRY,
       BEER_SERVINGS,
       WINE_SERVINGS,
       BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE COUNTRY IN ('albania','algeria');

--------------------------------------------------------------------------
-- 모든 나라의 평균 BEER_SERVINGS 보다 큰 나라의 WINE_SERVINGS, BEER_SERVINGS 를 구하라

SELECT COUNTRY, 
       WINE_SERVINGS, 
       BEER_SERVINGS, 
       BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION);

--------------------------------------------------------------------------
-- 모든 나라의 평균 BEER_SERVINGS보다 크고 평균 WINE_SERVINGS보다 작은 나라의
-- WINE_SERVINGS,BEER_SERVINGS 를 구하라

SELECT COUNTRY, 
       WINE_SERVINGS, 
       BEER_SERVINGS, 
       BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND WINE_SERVINGS<(SELECT AVG(WINE_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION);

--------------------------------------------------------------------------
-- 모든 나라의 평균 BEER_SERVINGS 보다 크고
-- 평균 WINE_SERVINGS 보다 작은 나라이면서 A가 들어가는 나라의 WINE_SERVINGS와 BEER_SERVINGS의 차이를 구하면
/* COUNTRY, BEER_SERVINGS, WINE_SERVINGS, BEER_SERVING와 WINE_SERVINGS의 차이 
모든나라의 평균 BEER_SERVINGS보다 크고 평균 WINE_SERVINGS보다 작다
*/

SELECT COUNTRY, BEER_SERVINGS, WINE_SERVINGS, BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND WINE_SERVINGS<(SELECT AVG(WINE_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND COUNTRY LIKE 'a%';


SELECT COUNTRY, BEER_SERVINGS, WINE_SERVINGS, BEER_SERVINGS-WINE_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND WINE_SERVINGS<(SELECT AVG(WINE_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND COUNTRY IN (SELECT COUNTRY
                  FROM ALCOHOL_CONSUMPTION
                  WHERE COUNTRY LIKE 'a%');
           
---------------------------------------------------------------------------

SELECT SUBSTR(COUNTRY,1,1), COUNT(*)
FROM ALCOHOL_CONSUMPTION
GROUP BY SUBSTR(COUNTRY,1,1)
ORDER BY COUNT(*) DESC;



SELECT COUNTRY, 
       BEER_SERVINGS, 
       WINE_SERVINGS, 
       BEER_SERVINGS-WINE_SERVINGS AS BEER_WINE_DIFF
FROM ALCOHOL_CONSUMPTION
WHERE BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND WINE_SERVINGS<(SELECT AVG(WINE_SERVINGS)
                     FROM ALCOHOL_CONSUMPTION)
  AND COUNTRY LIKE 's%';

SELECT COUNTRY,
       BEER_SERVINGS,
       WINE_SERVINGS,
       BEER_SERVINGS - WINE_SERVINGS AS BEER_WINE_DIFF
FROM ALCOHOL_CONSUMPTION
WHERE COUNTRY IN (SELECT COUNTRY
                  FROM ALCOHOL_CONSUMPTION
                  WHERE COUNTRY LIKE 's%'
                    AND BEER_SERVINGS>(SELECT AVG(BEER_SERVINGS)
                                       FROM ALCOHOL_CONSUMPTION)
                    AND WINE_SERVINGS<(SELECT AVG(WINE_SERVINGS)
                                       FROM ALCOHOL_CONSUMPTION));

--------------------------------------------------------------------------------
-- SUB QUERY 사용점

SELECT (SELECT AVG(BEER_SERVINGS) FROM ALCOHOL_CONSUMPTION)
FROM ALCOHOL_CONSUMPTION;

SELECT (SELECT AVG(BEER_SERVINGS) FROM ALCOHOL_CONSUMPTION)
FROM DUAL;
-- DUAL은 하나만 출력
-- 전부 합치기
SELECT BEER_SERVINGS
FROM ALCOHOL_CONSUMPTION
WHERE COUNTRY = 'algeria';

SELECT SUM(BEER_SERVINGS)
FROM ALCOHOL_CONSUMPTION;

SELECT AVG(BEER_SERVINGS)
FROM ALCOHOL_CONSUMPTION;

SELECT (SELECT BEER_SERVINGS
        FROM ALCOHOL_CONSUMPTION
        WHERE COUNTRY = 'algeria') AS ALGERIA,
       (SELECT SUM(BEER_SERVINGS)
        FROM ALCOHOL_CONSUMPTION) AS SUM_BEER,
       (SELECT AVG(BEER_SERVINGS)
        FROM ALCOHOL_CONSUMPTION) AS AVG_BEER
FROM DUAL;


SELECT COUNTRY,
       BEER_SERVINGS,
      (SELECT SUM(BEER_SERVINGS) 
       FROM ALCOHOL_CONSUMPTION) AS SUM_BEER
FROM ALCOHOL_CONSUMPTION
WHERE COUNTRY LIKE 's%';

-- BEER_SERVINGS 가 평균 BEER_SERVINGS 보다 큰 나라중 S로 시작하는 나라의 BEER_SERVINGS를 구하면
-- COUNTRY, BEER_SERVINGS , WINE_SERVINGS
-- BEER_SERVINGS가 평균 BEER_SERVINGS보다 크다
-- S로 시작하는 나라
-- WHERE 사용X

SELECT *
FROM (SELECT COUNTRY, 
             BEER_SERVINGS, 
             WINE_SERVINGS
      FROM ALCOHOL_CONSUMPTION
      WHERE BEER_SERVINGS > (SELECT AVG(BEER_SERVINGS)
                             FROM ALCOHOL_CONSUMPTION)
        AND COUNTRY LIKE 's%');

SELECT COUNTRY,
       BEER_SERVINGS,
       WINE_SERVINGS
FROM
(SELECT COUNTRY,
       BEER_SERVINGS,
       WINE_SERVINGS,
       (SELECT AVG(BEER_SERVINGS) 
        FROM ALCOHOL_CONSUMPTION) AS MEAN
 FROM ALCOHOL_CONSUMPTION
 WHERE COUNTRY LIKE 's%') 
WHERE MEAN>BEER_SERVINGS;

---------------------------------------------------------------------------------
-- BEER_SERVINGS 가 평균 BEER_SERVINGS 보다 큰 나라중 S로 시작하는 나라의 BEER_SERVINGS를 구하면
-- COUNTRY, BEER_SERVINGS , WINE_SERVINGS
-- BEER_SERVINGS가 평균 BEER_SERVINGS보다 크다
-- S로 시작하는 나라
-- QUERY 조건 FROM 절에 필요한 SUBQUERY 사용



SELECT COUNTRY,
       BEER_SERVINGS,
       MEAN
FROM (SELECT COUNTRY, 
             BEER_SERVINGS, 
            (SELECT AVG(BEER_SERVINGS)
             FROM ALCOHOL_CONSUMPTION)AS MEAN
      FROM ALCOHOL_CONSUMPTION)
WHERE BEER_SERVINGS>MEAN
  AND COUNTRY LIKE 'b%';


--------------------------------------------------------------------------------
-- JOIN TITANIC_MASTER, TITANIC_PERSON, TITANIC_DESC

-- 사망한 사람 중에서 여자의 이름만

SELECT B.SEX,
       A.PASSENGERS,
       B.NAME
FROM TITANIC_MASTER A INNER JOIN TITANIC_PERSON B
ON A.PASSENGERID = B.PASSENGERID
WHERE B.SEX='female'
  AND A.PASSENGERS='Perished';


SELECT TP.SEX,
       TM.PASSENGERS,
       TP.NAME
FROM TITANIC_MASTER TM INNER JOIN TITANIC_PERSON TP
ON TM.PASSENGERID=TP.PASSENGERID
WHERE TP.SEX='female'
  AND TM.PASSENGERS='Perished'
ORDER BY TP.NAME;


SELECT COUNT(*)
FROM TITANIC_MASTER INNER JOIN TITANIC_PERSON
ON TITANIC_MASTER.PASSENGERID = TITANIC_PERSON.PASSENGERID

-------------------------------------------------------------------------------
/*
사망한 사람 중에서 결혼한 여자의 정박지는?
*/

SELECT A.PASSENGERS,
       B.SEX,
       B.NAME,
       C.EMBARKED
FROM TITANIC_MASTER A INNER JOIN TITANIC_PERSON B
     ON A.PASSENGERID=B.PASSENGERID
     INNER JOIN TITANIC_DESC C
     ON A.PASSENGERID=C.PASSENGERID
  AND A.PASSENGERS='Perished'
  AND B.SEX = 'female'
  AND B.NAME LIKE '%Mrs%' ;


SELECT A.PASSENGERS,
       B.SEX,
       B.NAME,
       C.EMBARKED
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID=B.PASSENGERID AND B.PASSENGERID=C.PASSENGERID
  AND A.PASSENGERS='Perished'
  AND B.SEX='female'
  AND B.NAME LIKE '%Mrs%';


SELECT C.EMBARKED,
       COUNT(*)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID=B.PASSENGERID AND B.PASSENGERID=C.PASSENGERID
  AND A.PASSENGERS='Perished'
  AND B.SEX='female'
  AND B.NAME LIKE '%Mrs%'
GROUP BY C.EMBARKED;


--------------------------------------------------------------------------------
/*
사망자가 제일 많은 정박지를 구해 그 정박지의 운임의 합계를 각 성별로 GROUP BY
*/

---------------------------------------------------------------------------------
--각 정박지 별 사망자 수

SELECT B.EMBARKED,
       COUNT(*)
FROM TITANIC_MASTER A 
INNER JOIN TITANIC_DESC B ON A.PASSENGERID = B.PASSENGERID
WHERE A.PASSENGERS='Perished'
GROUP BY B.EMBARKED;

---------------------------------------------------------------------------------
--각각 FARE

SELECT PASSENGERS,EMBARKED,SEX,FARE
FROM (SELECT A.PASSENGERS,
             B.SEX,
             C.EMBARKED,
             C.FARE
      FROM TITANIC_MASTER A 
      INNER JOIN TITANIC_PERSON B ON A.PASSENGERID = B.PASSENGERID
      INNER JOIN TITANIC_DESC C ON A.PASSENGERID = C.PASSENGERID)
WHERE PASSENGERS='Perished'
  AND EMBARKED = 'S';
  
---------------------------------------------------------------------------------
-- ANSWER
-- INNER JOIN

SELECT B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A INNER JOIN TITANIC_PERSON B ON A.PASSENGERID = B.PASSENGERID 
                      INNER JOIN TITANIC_DESC C ON B.PASSENGERID = C.PASSENGERID
AND A.PASSENGERS='Perished'
AND C.EMBARKED='S'
GROUP BY B.SEX;

-- WHERE
SELECT B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID = B.PASSENGERID
AND B.PASSENGERID = C.PASSENGERID
AND A.PASSENGERS='Perished'
AND C.EMBARKED='S'
GROUP BY B.SEX;

--------------------------------------------------------------------------------
-- 순수 1개의 QUERY

SELECT B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID = B.PASSENGERID
  AND B.PASSENGERID = C.PASSENGERID
  AND A.PASSENGERS='Perished'
  AND C.EMBARKED=(SELECT C.EMBARKED
                  FROM (SELECT B.EMBARKED, COUNT(*) AS CNT
                        FROM TITANIC_MASTER A, TITANIC_DESC B
                        WHERE A.PASSENGERID=B.PASSENGERID
                          AND A.PASSENGERS='Perished'
                        GROUP BY B.EMBARKED) C
                  WHERE C.CNT=(SELECT MAX(D.CNT)
                               FROM (SELECT B.EMBARKED, COUNT(*) AS CNT
                                     FROM TITANIC_MASTER A, TITANIC_DESC B
                                     WHERE A.PASSENGERID=B.PASSENGERID
                                       AND A.PASSENGERS='Perished'
                                     GROUP BY B.EMBARKED) D))
GROUP BY B.SEX;



------------------------------------------------
--S 를뽑기위함
SELECT C.EMBARKED
FROM (SELECT B.EMBARKED, COUNT(*) AS CNT
      FROM TITANIC_MASTER A, TITANIC_DESC B
      WHERE A.PASSENGERID=B.PASSENGERID
        AND A.PASSENGERS='Perished'
      GROUP BY B.EMBARKED) C
WHERE C.CNT=509;


-------------------------------------------------
--509를 뽑기위함
SELECT MAX (D.CNT)
FROM (SELECT B.EMBARKED, COUNT(*) AS CNT
      FROM TITANIC_MASTER A, TITANIC_DESC B
      WHERE A.PASSENGERID=B.PASSENGERID
         AND A.PASSENGERS='Perished'
      GROUP BY B.EMBARKED) D;


--------------------------------------------------------------------------------
/*
사망여부, 성별 별 운임의 합계차이
*/
--피벗방법

SELECT A.PASSENGERS, B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID = B.PASSENGERID
  AND B.PASSENGERID = C.PASSENGERID
GROUP BY A.PASSENGERS,B.SEX;



SELECT A.PASSENGERS, B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID = B.PASSENGERID
  AND B.PASSENGERID = C.PASSENGERID
  AND B.SEX='male'
GROUP BY A.PASSENGERS, B.SEX;

SELECT A.PASSENGERS, B.SEX, SUM(C.FARE)
FROM TITANIC_MASTER A, TITANIC_PERSON B, TITANIC_DESC C
WHERE A.PASSENGERID = B.PASSENGERID
  AND B.PASSENGERID = C.PASSENGERID
  AND B.SEX='female'
GROUP BY A.PASSENGERS, B.SEX;






